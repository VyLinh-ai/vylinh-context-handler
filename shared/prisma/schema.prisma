generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id         String @id
  userId     String // External User ID reference
  folderId   String?
  title      String?
  chat       Json?
  createdAt  BigInt?
  updatedAt  BigInt?
  shareId    String? @unique
  archived   Boolean?
  pinned     Boolean?
  meta       Json @default("{}")
}

model ChatIdTag {
  id        String @id
  tagName   String?
  chatId    String?
  userId    String? // External reference to the User
  timestamp BigInt?
}

model Config {
  id        Int     @id @default(autoincrement())
  data      Json
  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Document {
  collectionName String @id
  name           String? @unique
  title          String?
  filename       String?
  content        String?
  userId         String? // External reference to the User
  timestamp      BigInt?
}

model Feedback {
  id         String @id
  userId     String? // External reference to the User
  version    BigInt @default(0)
  type       String?
  data       Json?
  meta       Json?
  snapshot   Json?
  createdAt  BigInt
  updatedAt  BigInt
}

model File {
  id         String @id
  userId     String? // External reference to the User
  filename   String?
  path       String?
  meta       Json?
  data       Json?
  createdAt  BigInt?
  updatedAt  BigInt?
  hash       String?
}

model Folder {
  id         String
  parentId   String?
  userId     String // External reference to the User
  name       String
  items      Json?
  meta       Json?
  isExpanded Boolean @default(false)
  createdAt  BigInt
  updatedAt  BigInt

  @@id([id, userId]) // Compound primary key
}

model Function {
  id         String @id
  userId     String? // External reference to the User
  name       String?
  type       String?
  content    String?
  meta       Json?
  valves     Json?
  isActive   Boolean?
  isGlobal   Boolean?
  updatedAt  BigInt?
  createdAt  BigInt?
}

model Group {
  id          String @id @unique
  userId      String? // External reference to the User
  name        String?
  description String?
  data        Json?
  meta        Json?
  permissions Json?
  userIds     Json?
  createdAt   BigInt?
  updatedAt   BigInt?
}

model Knowledge {
  id            String @id
  userId        String // External reference to the User
  name          String
  description   String?
  data          Json?
  meta          Json?
  accessControl Json?
  createdAt     BigInt
  updatedAt     BigInt?
}

model Memory {
  id        String @id
  userId    String? // External reference to the User
  content   String?
  updatedAt BigInt?
  createdAt BigInt?
}

model Model {
  id            String @id
  userId        String? // External reference to the User
  baseModelId   String?
  name          String?
  params        Json?
  meta          Json?
  accessControl Json?
  isActive      Boolean @default(true)
  updatedAt     BigInt?
  createdAt     BigInt?
}

model Prompt {
  command       String @id
  userId        String? // External reference to the User
  title         String?
  content       String?
  timestamp     BigInt?
  accessControl Json?
}

model Tag {
  id     String
  userId String // External reference to the User
  name   String?
  meta   Json?

  @@id([id, userId])  // Compound primary key
}

model Tool {
  id            String @id
  userId        String? // External reference to the User
  name          String?
  content       String?
  specs         Json?
  meta          Json?
  valves        Json?
  accessControl Json?
  updatedAt     BigInt?
  createdAt     BigInt?
}
